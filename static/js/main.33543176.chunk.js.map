{"version":3,"sources":["components/GoogleAnalytics/Events.js","components/Catalog/Catalog.js","components/WebXR/ARModel/ARModel.js","components/WebXR/ARHitTest/ARHitTest.js","components/WebXR/AROverlay/AROverlay.js","components/WebXR/ARLoader/ARLoader.js","components/WebXR/ARButton.js","components/WebXR/AROverlay/AROverlayGray.js","components/WebXR/WebXR.js","components/Catalog/Category/Category.js","components/Catalog/Size/Size.js","components/Catalog/Video/Video.js","App.js","serviceWorker.js","index.js"],"names":["GAevent","categoryName","eventName","label","value","ReactGA","event","category","action","nonInteraction","Catalog","data","handleGAEventClickVideo","className","Object","keys","map","id","slug","title","image","style","backgroundImage","to","onClick","handleGAEventClickCategory","handleGAEventClickSize","src","alt","ARModel","arGLTF","product","matrix","onShowOverlay","scale","useThree","camera","domElement","gl","gltf","useLoader","GLTFLoader","controls","useRef","axisYPosition","useEffect","scene","set","x","y","z","position","setFromMatrixPosition","current","DragControls","transformGroup","addEventListener","object","ARHitTest","onHit","onHitMatrix","box","useState","hitDetected","setHitDetected","useHitTest","hit","decompose","rotation","ref","args","onPointerDown","AROverlay","price","color","size","mfrLink","useParams","history","useHistory","handleClickClose","a","document","getElementById","click","handleClickBuy","window","open","handleClickSize","push","display","ARLoader","progress","useProgress","Html","center","ARButton","renderer","sessionInit","onReady","button","createElement","showStartAR","undefined","domOverlay","overlay","body","appendChild","svg","createElementNS","setAttribute","right","top","currentSession","end","path","optionalFeatures","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","isSessionSupported","supported","catch","message","isSecureContext","href","location","replace","innerHTML","textDecoration","AROverlayGray","scaleSizes","Math","round","WebXR","onSetProduct","useLocation","canvas","time","Date","now","isHit","setIsHit","hitMatrix","setHitMatrix","mode","setMode","showOverlay","setShowOverlay","buttonReady","setButtonReady","pathname","split","removeChild","unmountComponentAtNode","querySelector","console","log","handleIsHit","handleSetButtonReady","state","handleStartSession","arConfig","requiredFeatures","btn","createButton","append","handleGAEventSessionDuration","dpr","onCreated","intensity","fallback","Category","os","setOS","selectProduct","setSelectProduct","handleGAEventClickStartAR","userAgent","test","handleSetProduct","products","usdz","rel","getProduct","type","Size","xInput","yInput","zInput","handleClickInput","eo","target","handleBlurInput","figure","sides","side","index","htmlFor","defaultValue","onBlur","def","grayModel","Number","baseX","baseY","baseZ","Video","handleGAEventSendVideoDuration","autoPlay","preload","poster","App","initGA","exact","from","Boolean","hostname","match","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","initialize","GApageView","page","pageview","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"0kQAEaA,EAAU,SAACC,EAAcC,GAAwC,IAA7BC,EAA4B,uDAApB,IAAKC,EAAe,uDAAP,GAClEC,IAAQC,MAAM,CACVC,SAAUN,EACVO,OAAQN,EACRC,MAAOA,EACPC,MAAOA,EACPK,gBAAgB,K,OCyDTC,EA5DC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KASRC,EAA0B,WAC5BZ,EAAQ,QAAS,cAAe,UAmCpC,OACI,sBAAKa,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBAAf,wDACA,qBAAIA,UAAU,eAAd,UAlCeC,OAAOC,KAAKJ,GAEbK,KAAI,SAAAT,GAClB,MAAiCI,EAAKJ,GAA/BU,EAAP,EAAOA,GAAIC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,MAExB,OACI,qBAAaP,UAAU,eACnBQ,MAAO,CAACC,gBAAgB,QAAD,OAAWF,EAAX,OAD3B,UAEI,cAAC,IAAD,CACIP,UAAU,qBACVU,GAAE,mBAAcL,GAChBM,QAAS,kBApBM,SAACL,GAChCnB,EAAQ,WAAD,iBAA+BmB,GAmBPM,CAA2BN,IAH9C,SAKI,sBAAMN,UAAU,2BAAhB,SAA4CM,MAEhD,cAAC,IAAD,CACIN,UAAU,0BACVU,GAAE,gBAAWL,GACbM,QAAS,kBA/BE,SAACL,GAC5BnB,EAAQ,OAAQ,aAAcmB,GA8BCO,CAAuBP,IAH1C,SAKI,qBACIN,UAAU,gCACVc,IAAI,kCACJC,IAAKT,EAAQ,cAjBhBF,MA8BT,oBAAIJ,UAAU,qBAAqBW,QAAS,kBAAMZ,GAAlD,SACI,cAAC,IAAD,CAAMC,UAAU,kBAAkBU,GAAG,SAArC,8G,sDChBLM,EAnCC,SAAC,GAAuD,IAA5CC,EAA2C,EAArDC,QAAUD,OAASE,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,MACxD,EAAmCC,cAA5BC,EAAP,EAAOA,OAAaC,EAApB,EAAeC,GAAKD,WACdE,EAAOC,YAAUC,IAAYX,GAC7BY,EAAWC,iBAAO,IAClBC,EAAgBD,iBAAO,GA0B7B,OAxBAE,qBAAU,WACFX,GAASF,IAETO,EAAKO,MAAMZ,MAAMa,IAAIb,EAAMc,EAAGd,EAAMe,EAAGf,EAAMgB,GAC7CX,EAAKO,MAAMK,SAASC,sBAAsBpB,GAC1CY,EAAcS,QAAUd,EAAKO,MAAMK,SAASF,GAOhDP,EAASW,QAAU,IAAIC,IAAa,CAACf,EAAKO,OAAQV,EAAQC,GAC1DK,EAASW,QAAQE,gBAAiB,EAMlCb,EAASW,QAAQG,iBAAiB,QAJX,kBAAOjB,EAAKO,MAAMK,SAASF,EAAIL,EAAcS,WAKpEX,EAASW,QAAQG,iBAAiB,aAJV,kBAAMvB,GAAc,MAK5CS,EAASW,QAAQG,iBAAiB,WAJZ,kBAAMvB,GAAc,QAK3C,IAGC,2BAAWwB,OAAQlB,EAAKO,S,QCJjBY,EA5BG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACjBC,EAAMlB,mBACZ,EAAsCmB,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,aAAW,SAAAC,GACHA,IAAQH,GACRC,GAAe,GAGfH,EAAIR,SAAWa,GACfA,EAAIC,UAAUN,EAAIR,QAAQF,SAAUU,EAAIR,QAAQe,SAAUP,EAAIR,QAAQnB,UAS9E,OACI,mCACK6B,GACD,cAAC,IAAD,CAAKM,IAAKR,EAAKS,KAAM,CAAC,IAAM,IAAM,KAAOC,cARvB,WACtBX,EAAYC,EAAIR,QAAQrB,QACxB2B,GAAM,S,yBC8DCa,G,MA7EG,SAAC,GAIO,IAAD,IAHFzC,QACIZ,EAEF,EAFEA,MAAOsD,EAET,EAFSA,MAAOC,EAEhB,EAFgBA,MAAOC,EAEvB,EAFuBA,KAAMC,EAE7B,EAF6BA,QAC5BjB,EACD,EADCA,MAAO1B,EACR,EADQA,cAEtB1B,EAAYsE,cAAZtE,SACDuE,EAAUC,cAOVC,EAAgB,uCAAG,sBAAAC,EAAA,6DALajF,EAAQ,WAAY,cAAemB,GAKhD,SAEf+D,SAASC,eAAe,YAAYC,QAFrB,2CAAH,qDAUhBC,EAAc,uCAAG,sBAAAJ,EAAA,6DAbkBjF,EAAQ,WAAY,0BAA2BmB,GAajE,SAEb+D,SAASC,eAAe,YAAYC,QAFvB,OAGnBE,OAAOC,KAAKX,GAHO,2CAAH,qDAMdY,EAAe,uCAAG,sBAAAP,EAAA,6DAlBajF,EAAQ,WAAY,aAAcmB,GAkB/C,SAEd+D,SAASC,eAAe,YAAYC,QAFtB,OAGpBN,EAAQW,KAAR,gBAAsBlF,IAHF,2CAAH,qDAMrB,OACI,qCACI,sBAAKM,UAAU,uBAAuBQ,MAAO,CAACqE,QAASzD,EAAgB,QAAU,QAAjF,UACI,qBAAKpB,UAAU,0BAA0BW,QAASwD,EAAlD,SACI,sBAAMnE,UAAU,oBAEpB,qBAAKA,UAAU,0BAA0BW,QAvB5B,WATaxB,EAAQ,WAAY,cAAemB,GAWrEwC,GAAM,IAqBE,SACI,qBAAK9C,UAAU,gBAAgBc,IAAI,kCAAkCC,IAAI,eAIjF,sBAAKf,UAAU,oBAAoBQ,MAAO,CAACqE,QAASzD,EAAgB,QAAU,QAA9E,UACI,sBAAKpB,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,qBAAf,SACKM,IAEL,sBAAKN,UAAU,qBAAf,UACK4D,EADL,aAKJ,sBAAK5D,UAAU,qBAAf,UACI,gCACI,8DAAoB6D,KAExB,gCACI,8FAA2BC,QAInC,wBAAQ9D,UAAU,qBAAqBW,QAAS6D,EAAhD,mKAGJ,qBAAKxE,UAAU,2BAAf,SACI,wBAAQA,UAAU,iBAAiBW,QAASgE,EAA5C,4I,gBClELG,EALE,WACb,IAAMC,EAAWC,cACjB,OAAO,eAACC,EAAA,EAAD,CAAMC,QAAM,EAAZ,UAAcH,EAASA,SAAvB,gB,cCNLI,E,iGAEF,SAAoBC,GAAsC,IAA5BC,EAA2B,uDAAb,GAAIC,EAAS,uCAC/CC,EAASlB,SAASmB,cAAc,UAEtC,SAASC,IACL,QAA+BC,IAA3BL,EAAYM,WAA0B,CACtC,IAAIC,EAAUvB,SAASmB,cAAc,OACrCI,EAAQpF,MAAMqE,QAAU,OACxBR,SAASwB,KAAKC,YAAYF,GAE1B,IAAIG,EAAM1B,SAAS2B,gBAAgB,6BAA8B,OACjED,EAAIE,aAAa,QAAS,IAC1BF,EAAIE,aAAa,SAAU,IAC3BF,EAAIvF,MAAM8B,SAAW,WACrByD,EAAIvF,MAAM0F,MAAQ,OAClBH,EAAIvF,MAAM2F,IAAM,OAChBJ,EAAIpD,iBAAiB,SAAS,WAC1ByD,EAAeC,SAEnBT,EAAQE,YAAYC,GAEpB,IAAIO,EAAOjC,SAAS2B,gBAAgB,6BAA8B,QAClEM,EAAKL,aAAa,IAAK,iCACvBK,EAAKL,aAAa,SAAU,QAC5BK,EAAKL,aAAa,eAAgB,GAClCF,EAAID,YAAYQ,QAEqBZ,IAAjCL,EAAYkB,mBACZlB,EAAYkB,iBAAmB,IAGnClB,EAAYkB,iBAAiB3B,KAAK,eAClCS,EAAYM,WAAa,CAACa,KAAMZ,GAGpC,IAAIQ,EAAiB,KA/BF,SAiCJK,EAjCI,8EAiCnB,WAAgCC,GAAhC,SAAAtC,EAAA,6DACIsC,EAAQ/D,iBAAiB,MAAOgE,GAChCvB,EAASwB,GAAGC,sBAAsB,SAFtC,SAGUzB,EAASwB,GAAGE,WAAWJ,GAHjC,OAIInB,EAAOwB,YAAc,UACrB1B,EAAYM,WAAWa,KAAKhG,MAAMqE,QAAU,GAC5CuB,EAAiBM,EANrB,4CAjCmB,sBA2CnB,SAASC,IACLP,EAAeY,oBAAoB,MAAOL,GAC1CpB,EAAOwB,YAAc,WACrB1B,EAAYM,WAAWa,KAAKhG,MAAMqE,QAAU,OAC5CuB,EAAiB,KAGrBb,EAAO/E,MAAMqE,QAAU,GACvBU,EAAO/E,MAAMyG,OAAS,UACtB1B,EAAO/E,MAAM0G,KAAO,mBACpB3B,EAAO/E,MAAM2G,MAAQ,QACrB5B,EAAOwB,YAAc,WACrBxB,EAAO6B,aAAe,WAClB7B,EAAO/E,MAAM6G,QAAU,OAG3B9B,EAAO+B,aAAe,WAClB/B,EAAO/E,MAAM6G,QAAU,OAG3B9B,EAAOgC,QAAU,WACU,OAAnBnB,GACAd,GAAQ,GACRkC,UAAUZ,GAAGa,eAAe,eAAgBpC,GAAaqC,KAAKjB,IAE9DL,EAAeC,OAK3B,SAASsB,IACLpC,EAAO/E,MAAMqE,QAAU,GACvBU,EAAO/E,MAAMyG,OAAS,OACtB1B,EAAO/E,MAAM0G,KAAO,mBACpB3B,EAAO/E,MAAM2G,MAAQ,QACrB5B,EAAO6B,aAAe,KACtB7B,EAAO+B,aAAe,KACtB/B,EAAOgC,QAAU,KAGrB,SAASK,IACLD,IACApC,EAAOwB,YAAc,mBAGzB,SAASc,EAAeC,GACpBA,EAAQtH,MAAM8B,SAAW,WACzBwF,EAAQtH,MAAMuH,OAAS,OACvBD,EAAQtH,MAAMwH,QAAU,WACxBF,EAAQtH,MAAMyH,OAAS,iBACvBH,EAAQtH,MAAM0H,aAAe,MAC7BJ,EAAQtH,MAAM2H,WAAa,kBAC3BL,EAAQtH,MAAMqD,MAAQ,OACtBiE,EAAQtH,MAAM4H,KAAO,yBACrBN,EAAQtH,MAAM6H,UAAY,SAC1BP,EAAQtH,MAAM6G,QAAU,MACxBS,EAAQtH,MAAM8H,QAAU,OACxBR,EAAQtH,MAAM+H,OAAS,MAG3B,GAAI,OAAQf,UAYR,OAVAjC,EAAOnF,GAAK,WACZmF,EAAO/E,MAAMqE,QAAU,OACvBgD,EAAetC,GACfiC,UAAUZ,GAAG4B,mBAAmB,gBAAgBd,MAAK,SAAUe,GAC3DA,EACIhD,IACAmC,IACJtC,GAAQ,MAEPoD,MAAMd,GACJrC,EAEP,IAAMoD,EAAUtE,SAASmB,cAAc,KAavC,OAZ+B,IAA3Bf,OAAOmE,iBACPD,EAAQE,KAAOxE,SAASyE,SAASD,KAAKE,QAAQ,SAAU,UACxDJ,EAAQK,UAAY,sBAEpBL,EAAQE,KAAO,4BACfF,EAAQK,UAAY,uBAExBL,EAAQnI,MAAM0G,KAAO,mBACrByB,EAAQnI,MAAM2G,MAAQ,QACtBwB,EAAQnI,MAAMyI,eAAiB,OAC/BpB,EAAec,GAERA,M,KCjEJO,G,MAlEO,SAAC,GAGO,IAAD,IAFFhI,QAAUZ,EAER,EAFQA,MAAOwD,EAEf,EAFeA,KACjBhB,EACE,EADFA,MAAO1B,EACL,EADKA,cAAeC,EACpB,EADoBA,MAOvC8C,EAAgB,uCAAG,sBAAAC,EAAA,6DAJajF,EAAQ,UAAW,cAAemB,GAI/C,SAEf+D,SAASC,eAAe,YAAYC,QAFrB,2CAAH,qDAUhBI,EAAe,uCAAG,sBAAAP,EAAA,6DAZajF,EAAQ,UAAW,aAAcmB,GAY9C,SAEd+D,SAASC,eAAe,YAAYC,QAFtB,2CAAH,qDAKf4E,EAAa,CACfC,KAAKC,MAAMvF,EAAK,GAAKzC,EAAMc,GAC3BiH,KAAKC,MAAMvF,EAAK,GAAKzC,EAAMe,GAC3BgH,KAAKC,MAAMvF,EAAK,GAAKzC,EAAMgB,IAG/B,OACI,qCACI,sBAAKrC,UAAU,4BAA4BQ,MAAO,CAACqE,QAASzD,EAAgB,QAAU,QAAtF,UACI,qBAAKpB,UAAU,+BAA+BW,QAASwD,EAAvD,SACI,sBAAMnE,UAAU,yBAEpB,qBAAKA,UAAU,+BAA+BW,QAtBjC,WARaxB,EAAQ,UAAW,cAAemB,GAUpEwC,GAAM,IAoBE,SACI,qBAAK9C,UAAU,qBAAqBc,IAAI,kCAAkCC,IAAI,eAItF,sBAAKf,UAAU,yBAAyBQ,MAAO,CAACqE,QAASzD,EAAgB,QAAU,QAAnF,UACI,sBAAKpB,UAAU,eAAf,UACI,qBAAKA,UAAU,qBAAf,SACKM,IAEL,sBAAKN,UAAU,oBAAf,UACI,8FADJ,IAEKmJ,EAAW,GAAZ,UACOA,EAAW,GADlB,cAC0BA,EAAW,GADrC,cAC6CA,EAAW,IADxD,UAEOA,EAAW,GAFlB,cAE0BA,EAAW,OAGzC,qBAAKnJ,UAAU,0BAAf,0NAKJ,qBAAKA,UAAU,gCAAf,SACI,wBAAQA,UAAU,sBAAsBW,QAASgE,EAAjD,mHCmCL2E,EAnFD,SAAC,GAAoC,IAAnCpI,EAAkC,EAAlCA,QAASqI,EAAyB,EAAzBA,aAAclI,EAAW,EAAXA,MAC7ByH,EAAWU,cACXC,EAAS3H,mBACT4H,EAAO5H,iBAAO6H,KAAKC,OAEzB,EAA0B3G,oBAAS,GAAnC,mBAAO4G,EAAP,KAAcC,EAAd,KACA,EAAkC7G,mBAAS,IAA3C,mBAAO8G,EAAP,KAAkBC,EAAlB,KACA,EAAwB/G,mBAAS,IAAjC,mBAAOgH,EAAP,KAAaC,EAAb,KAEA,EAAsCjH,oBAAS,GAA/C,mBAAOkH,EAAP,KAAoBC,EAApB,KACA,EAAsCnH,oBAAS,GAA/C,mBAAOoH,EAAP,KAAoBC,EAApB,KAMAtI,qBAAU,WACN,IAAMsE,EAAOwC,EAASyB,SAASC,MAAM,KAAK,GAG1C,OAFAN,EAAmB,SAAV5D,EAAmB,YAAc,SAEnC,WACCjC,SAASC,eAAe,aACxBD,SAASwB,KAAK4E,YAAYpG,SAASC,eAAe,aAEtDoG,YAAuBrG,SAASsG,cAAc,cAEnD,CAACzJ,IACJ0J,QAAQC,IAAIR,GACZ,IAAMS,EAAc,SAACzH,GAAD,OAASyG,EAASzG,IAGhC0H,EAAuB,SAACC,GAAD,OAAWV,EAAeU,IAEjDC,EAAqB,SAACxJ,GACxB,IAAMyJ,EAAW,CACbC,iBAAkB,CAAC,YACnB5E,iBAAkB,CAAC,eACnBZ,WAAY,CAACa,KAAMnC,SAASsG,cAAc,uBAGxCS,EAAMjG,EAASkG,aAAa5J,EAAIyJ,EAAUH,GAChD1G,SAASwB,KAAKyF,OAAOF,GAErB3J,EAAGmF,GAAGjE,iBAAiB,cAAc,YA/BJ,SAAC+G,GAClCvK,EAAQ,aAAc,mBAAf,UAAsCuK,EAAtC,aAgCH6B,EADgB5B,KAAKC,MACmBF,EAAKlH,SAAW,KACxD+G,EAAa,KAAMrI,EAAQZ,WAUnC,OANA0B,qBAAU,WACFqI,GACAhG,SAASC,eAAe,YAAYC,UAEzC,CAAC8F,IAGA,sBAAKrK,UAAU,mBAAmBwD,IAAKiG,EAAvC,UACI,eAAC,IAAD,CAAUzJ,UAAU,WAAWiK,KAAK,aAAauB,KAAG,EAACC,UAAW,gBAAEhK,EAAF,EAAEA,GAAF,OAAUwJ,EAAmBxJ,IAA7F,UACI,kCAAkBa,SAAU,CAAC,EAAG,EAAG,GAAIoJ,UAAW,IAClD,kCAAkBpJ,SAAU,CAAC,EAAG,GAAI,GAAIoJ,UAAW,IACnD,kCAAkBpJ,SAAU,CAAC,EAAG,EAAG,GAAIoJ,UAAW,IAClD,kCAAkBpJ,SAAU,EAAE,EAAG,EAAG,GAAIoJ,UAAW,IACnD,kCAAkBpJ,SAAU,CAAC,GAAI,EAAG,GAAIoJ,UAAW,IAEnD,eAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,WACM9B,GAAS,cAAC,EAAD,CAAW/G,MAAOgI,EAAa/H,YArClC,SAAC5B,GAAD,OAAY6I,EAAa7I,MAuChC0I,GACD,cAAC,EAAD,CAAS3I,QAASA,EAASC,OAAQ4I,EAAW1I,MAAOA,EAAOD,cAvC/C,SAAC4J,GAAD,OAAWZ,EAAeY,SA0C3C,cAAC,IAAD,OAEHnB,GAAmB,UAATI,EACP,cAAC,EAAD,CAAW/I,QAASA,EAAS4B,MAAOgI,EAAa1J,cAAe+I,IAChEN,GAAmB,cAATI,EACN,cAAC,EAAD,CAAe/I,QAASA,EAAS4B,MAAOgI,EAAa1J,cAAe+I,EAAa9I,MAAOA,IACxF,SCcLuK,EArGE,SAAC,GAAY,IAAX9L,EAAU,EAAVA,KACRJ,EAAYsE,cAAZtE,SACP,EAAoBuD,mBAAS,IAA7B,mBAAO4I,EAAP,KAAWC,EAAX,KACA,EAA0C7I,mBAAS,MAAnD,mBAAO8I,EAAP,KAAsBC,EAAtB,KAEMC,EAA4B,SAAC3L,GAAD,OAAWnB,EAAQ,WAAY,gBAAiBmB,IAGlF0B,qBAAU,WACN,IAAMkK,EAAYzH,OAAO+C,UAAU0E,UAE/B,oBAAoBC,KAAKD,GACzBJ,EAAM,SAENA,EAAM,aAEX,IAEH,IAAMM,EAAmB,SAAClL,GAAyB,IAAhBZ,EAAe,uDAAP,GAC5B,YAAPuL,GACAG,EAAiB9K,GAGrB+K,EAA0B3L,IAiD9B,OACI,sCACMyL,GACF,sBAAK/L,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBAAf,SACKF,EAAKJ,GAAUY,QAGpB,oBAAIN,UAAU,gBAAd,SAfWF,EAAKJ,GAAjB2M,SAESlM,KAAI,SAAAe,GAChB,OA1CW,SAACA,GAChB,IAAOd,EAA8Cc,EAA9Cd,GAAIE,EAA0CY,EAA1CZ,MAAOC,EAAmCW,EAAnCX,MAAOsD,EAA4B3C,EAA5B2C,MAAOC,EAAqB5C,EAArB4C,KAAMF,EAAe1C,EAAf0C,MAAO0I,EAAQpL,EAARoL,KAE7C,MAAW,UAAPT,EAEI,oBAAa7L,UAAU,gBAAvB,SACI,oBAAGA,UAAU,2BAA2BI,GAAG,UAAUyI,KAAMyD,EAAMC,IAAI,KAArE,UACI,sBAAKvM,UAAU,gCAAf,UACI,qBAAKA,UAAU,sBAAsBc,IAAKP,EAAOQ,IAAKT,IACtD,qBAAKN,UAAU,yBAAyBc,IAAI,mCAAmCC,IAAI,UAEvF,qBAAKf,UAAU,sBAAf,SAAsCM,IACtC,sBAAKN,UAAU,qCAAf,UACI,sBAAKA,UAAU,sBAAf,UAAqC,8DAAoB6D,KACzD,sBAAK7D,UAAU,qBAAf,UAAoC,8FAA2B8D,QAEnE,sBAAK9D,UAAU,sBAAf,UAAsC4D,EAAtC,cAXCxD,GAiBT,qBAAaJ,UAAU,gBAAgBW,QAAS,kBAAMyL,EAAiBlL,IAAvE,UACI,sBAAKlB,UAAU,gCAAf,UACI,qBAAKA,UAAU,sBAAsBc,IAAKP,EAAOQ,IAAKT,IACtD,qBAAKN,UAAU,yBAAyBc,IAAI,mCAAmCC,IAAI,UAEvF,qBAAKf,UAAU,sBAAf,SAAsCM,IACtC,sBAAKN,UAAU,qCAAf,UACI,sBAAKA,UAAU,sBAAf,UAAqC,8DAAoB6D,KACzD,sBAAK7D,UAAU,qBAAf,UAAoC,8FAA2B8D,QAEnE,sBAAK9D,UAAU,sBAAf,UAAsC4D,EAAtC,YAVKxD,GAoBNoM,CAAWtL,QAgBN,YAAP2K,GACD,cAAC,IAAD,CAAM7L,UAAU,+BAA+BU,GAAE,gBAAWhB,GACtDiB,QAAS,kBAhFKL,EAgFwBR,EAAKJ,GAAUY,MAhF7BnB,EAAQ,WAAY,aAAcmB,GAA7C,IAACA,GA+EpB,SAEI,wBAAQN,UAAU,qBAAqByM,KAAK,SAA5C,uIAQPV,GACD,cAAC,EAAD,CAAO7K,QAAS6K,EAAexC,aAAc6C,EAAkB/K,MAAO,CAACc,EAAG,EAAGC,EAAG,EAAGC,EAAG,S,QCenFqK,G,MA/GF,SAAC,GAAY,IAAX5M,EAAU,EAAVA,KACJJ,EAAYsE,cAAZtE,SACDiN,EAAS7K,mBACT8K,EAAS9K,mBACT+K,EAAS/K,mBACTT,EAAQS,iBAAO,IACrB,EAA0CmB,mBAAS,MAAnD,mBAAO8I,EAAP,KAAsBC,EAAtB,KAgBMc,EAAmB,SAACC,GACE,MAApBA,EAAGC,OAAOzN,QACVwN,EAAGC,OAAOzN,MAAQ,KAIpB0N,EAAkB,SAACF,GACG,KAApBA,EAAGC,OAAOzN,QACVwN,EAAGC,OAAOzN,MAAQ,MAgD1B,OACI,sCACMwM,GACF,sBAAK/L,UAAU,iBAAf,UACI,qBAAKA,UAAU,cAAf,8IAEA,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAac,IAAKhB,EAAKJ,GAAUwN,OAAQnM,IAAI,WAGhE,qBAAKf,UAAU,kBAAf,SArDDF,EAAKJ,GAAUyN,MAAMhN,KAAI,SAACiN,EAAMC,GACnC,IAAM7J,EAAgB,IAAV6J,EAAcV,EAAmB,IAAVU,EAAcT,EAASC,EAC1D,OACI,sBAAiB7M,UAAU,kBAA3B,UACI,wBAAOsN,QAASF,EAAK,GAArB,UAA0BA,EAAK,GAA/B,QACA,uBAAO5J,IAAKA,EAAKxD,UAAU,aAAaI,GAAIgN,EAAK,GAAIX,KAAK,SAASc,aAAa,IACzE5M,QAASmM,EAAkBU,OAAQP,IAE1C,kDALMI,QAsDV,qBAAKrN,UAAU,+BAA+BW,QA3CvC,WACf,IAAM8M,EAAM3N,EAAKJ,GAAUgO,UAAU5J,KAErC,GAAI2J,EAAI,IAAMA,EAAI,GAAI,CAClB,IAAMtL,EAAIwL,OAAOhB,EAAOnK,QAAQjD,OAC1B6C,EAAIuL,OAAOf,EAAOpK,QAAQjD,OAC1BqO,EAAQH,EAAI,GACZI,EAAQJ,EAAI,GAOlB,GALApM,EAAMmB,QAAU,CACZL,EAAU,IAANA,EAAW,EAAIA,EAAIyL,EACvBxL,EAAU,IAANA,EAAW,EAAIA,EAAIyL,GAE3BjD,QAAQC,IAAI4C,EAAI,IACZA,EAAI,GAAI,CACR,IAAMpL,EAAIsL,OAAOd,EAAOrK,QAAQjD,OAC1BuO,EAAQL,EAAI,GAClBpM,EAAMmB,QAAN,2BACOnB,EAAMmB,SADb,IAEIH,EAAU,IAANA,EAAW,EAAIA,EAAIyL,OAwB3B,SAEI,wBACI9N,UAAU,qBACVyM,KAAK,SACL9L,QAzFmB,WACnCxB,EACI,OACA,sBAFG,4BAIGwN,EAAOnK,QAAQjD,MAAQoN,EAAOnK,QAAQjD,MAAQ,UAJjD,iCAKGqN,EAAOpK,QAAQjD,MAAQqN,EAAOpK,QAAQjD,MAAQ,UALjD,gCAMGsN,EAAOrK,QAAQjD,MAAQsN,EAAOrK,QAAQjD,MAAQ,UANjD,mBAUPyM,EAAiBlM,EAAKJ,KA2EV,yEAUPqM,GACD,cAAC,EAAD,CAAO7K,QAASpB,EAAKJ,GAAUgO,UAAWnE,aA/BzB,SAACrI,GACtB8K,EAAiB9K,IA8B6DG,MAAOA,EAAMmB,eC1EpFuL,G,MAjCD,WAiBV,OAVA/L,qBAAU,WACN,IAAM0H,EAAOC,KAAKC,MAElB,OAAO,YAP4B,SAACF,GACpCvK,EAAQ,QAAS,iBAAV,UAA+BuK,EAA/B,aAQHsE,EADgBrE,KAAKC,MACqBF,GAAQ,QAEvD,IAIC,qBAAK1J,UAAU,kBAAf,SACI,uBAAOiO,SAAS,WACTC,QAAQ,OACRrM,SAAS,WACTsM,OAAO,6BAHd,SAKI,wBACIrN,IAAI,6BACJ2L,KAAK,qDCYV2B,MA7Bf,WAKI,OAJApM,qBAAU,WACNqM,MACD,IAGC,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAAChI,KAAK,WAAlB,SACI,cAAC,EAAD,CAASxG,KAAMA,MAEnB,cAAC,IAAD,CAAOwO,OAAK,EAAChI,KAAK,qBAAlB,SACI,cAAC,EAAD,CAAUxG,KAAMA,MAKpB,cAAC,IAAD,CAAOwO,OAAK,EAAChI,KAAK,kBAAlB,SACI,cAAC,EAAD,CAAMxG,KAAMA,MAEhB,cAAC,IAAD,CAAOwO,OAAK,EAAChI,KAAK,SAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAUiI,KAAK,IAAI7N,GAAG,mBCpClB8N,QACW,cAA7B/J,OAAOqE,SAAS2F,UAEe,UAA7BhK,OAAOqE,SAAS2F,UAEhBhK,OAAOqE,SAAS2F,SAASC,MACvB,2D,YCCNC,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGnBR,IAASS,YAEF,IAAMf,EAAS,WAClB7O,IAAQ6P,WAAW,mBAGVC,EAAa,SAACC,GACvB/P,IAAQgQ,SAASD,IAGrBE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJtL,SAASC,eAAe,SDyEtB,kBAAmBkD,WACrBA,UAAUoI,cAAcC,MAAMnI,MAAK,SAACoI,GAClCA,EAAaC,kB","file":"static/js/main.33543176.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\r\n\r\nexport const GAevent = (categoryName, eventName, label = ' ', value = 10) => {\r\n    ReactGA.event({\r\n        category: categoryName,\r\n        action: eventName,\r\n        label: label,\r\n        value: value,\r\n        nonInteraction: false\r\n    });\r\n}\r\n\r\nexport const GAtiming = (categoryName, variableName, valueNum) => {\r\n    ReactGA.timing({\r\n        category: categoryName,\r\n        variable: variableName,\r\n        value: valueNum\r\n    });\r\n};\r\n\r\nexport const GAexception = (detail) => {\r\n    ReactGA.exception({ description: detail });\r\n};","import React from 'react';\r\nimport './Catalog.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {GAevent} from \"../GoogleAnalytics/Events\";\r\n\r\nconst Catalog = ({data}) => {\r\n    const handleGAEventClickSize = (title) => {\r\n        GAevent('SIZE', 'click size', title);\r\n    }\r\n\r\n    const handleGAEventClickCategory = (title) => {\r\n        GAevent('CATEGORY', `click category`, title);\r\n    }\r\n\r\n    const handleGAEventClickVideo = () => {\r\n        GAevent('VIDEO', 'click video', 'video')\r\n    }\r\n\r\n    const getCatalogList = () => {\r\n        const categories = Object.keys(data);\r\n\r\n        return categories.map(category => {\r\n            const {id, slug, title, image} = data[category];\r\n\r\n            return (\r\n                <li key={id} className='catalog_item'\r\n                    style={{backgroundImage: (`url(\"${image}\")`)}}>\r\n                    <Link\r\n                        className='item_link_category'\r\n                        to={`/catalog/${slug}`}\r\n                        onClick={() => handleGAEventClickCategory(title)}\r\n                    >\r\n                        <span className='item_link_category_title'>{title}</span>\r\n                    </Link>\r\n                    <Link\r\n                        className='item_link_category_size'\r\n                        to={`/size/${slug}`}\r\n                        onClick={() => handleGAEventClickSize(title)}\r\n                    >\r\n                        <img\r\n                            className='item_link_category_size_image'\r\n                            src='./assets/images/other/ruler.png'\r\n                            alt={title + ' size'}\r\n                        />\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='catalog_container'>\r\n            <div className='catalog_header'>Каталог</div>\r\n            <ul className='catalog_list'>\r\n                {getCatalogList()}\r\n                <li className='catalog_item_video' onClick={() => handleGAEventClickVideo}>\r\n                    <Link className='item_link_video' to='/video'>\r\n                        Как это работает?\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Catalog;","import React, {useEffect, useRef} from 'react';\r\nimport {useLoader, useThree} from \"@react-three/fiber\";\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport {DragControls} from \"three/examples/jsm/controls/DragControls\";\r\n\r\nconst ARModel = ({product: {arGLTF}, matrix, onShowOverlay, scale}) => {\r\n    const {camera, gl: {domElement}} = useThree();\r\n    const gltf = useLoader(GLTFLoader, arGLTF);\r\n    const controls = useRef({});\r\n    const axisYPosition = useRef(0);\r\n\r\n    useEffect(() => {\r\n        if (scale && matrix) {\r\n            // Позиция матрицы раскладывается поздно!!!!!\r\n            gltf.scene.scale.set(scale.x, scale.y, scale.z);\r\n            gltf.scene.position.setFromMatrixPosition(matrix);\r\n            axisYPosition.current = gltf.scene.position.y;\r\n        }\r\n\r\n        /*gltf.scene.scale.set(scale.x, scale.y, scale.z);\r\n        gltf.scene.position.setFromMatrixPosition(matrix);\r\n        axisYPosition.current = gltf.scene.position.y;*/\r\n\r\n        controls.current = new DragControls([gltf.scene], camera, domElement);\r\n        controls.current.transformGroup = true;\r\n\r\n        const handleDragMove = () => (gltf.scene.position.y = axisYPosition.current);\r\n        const handleDragStart = () => onShowOverlay(false);\r\n        const handleDragEnd = () => onShowOverlay(true);\r\n\r\n        controls.current.addEventListener('drag', handleDragMove);\r\n        controls.current.addEventListener('dragstart', handleDragStart);\r\n        controls.current.addEventListener('dragend', handleDragEnd);\r\n    }, []);\r\n\r\n    return (\r\n        <primitive object={gltf.scene}/>\r\n    );\r\n}\r\n\r\nexport default ARModel;","import React, {useRef, useState} from 'react';\r\nimport {useHitTest} from \"@react-three/xr\";\r\nimport {Box} from \"@react-three/drei\";\r\n\r\nconst ARHitTest = ({onHit, onHitMatrix}) => {\r\n    const box = useRef();\r\n    const [hitDetected, setHitDetected] = useState(false);\r\n\r\n    useHitTest(hit => {\r\n        if (hit && !hitDetected) {\r\n            setHitDetected(true);\r\n        }\r\n\r\n        if (box.current && hit) {\r\n            hit.decompose(box.current.position, box.current.rotation, box.current.scale);\r\n        }\r\n    });\r\n\r\n    const handlePointerDown = () => {\r\n        onHitMatrix(box.current.matrix);\r\n        onHit(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {hitDetected &&\r\n            <Box ref={box} args={[0.15, 0.01, 0.15]} onPointerDown={handlePointerDown}/>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ARHitTest;","import React from 'react';\r\nimport './AROverlay.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport {useHistory, useParams} from \"react-router\";\r\n\r\nconst AROverlay = ({\r\n                       product: {\r\n                           title, price, color, size, mfrLink\r\n                       }, onHit, onShowOverlay\r\n                   }) => {\r\n    const {category} = useParams();\r\n    const history = useHistory();\r\n\r\n    const handleGAEventClickClose = () => GAevent('AR MODEL', 'click close', title);\r\n    const handleGAEventClickReset = () => GAevent('AR MODEL', 'click reset', title);\r\n    const handleGAEventClickRedirect = () => GAevent('AR MODEL', 'click redirect to store', title);\r\n    const handleGAEventClickSize = () => GAevent('AR MODEL', 'click size', title);\r\n\r\n    const handleClickClose = async () => {\r\n        handleGAEventClickClose();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        handleGAEventClickReset();\r\n        onHit(false);\r\n    }\r\n\r\n    const handleClickBuy = async () => {\r\n        handleGAEventClickRedirect();\r\n        await document.getElementById('ARButton').click();\r\n        window.open(mfrLink);\r\n    }\r\n\r\n    const handleClickSize = async () => {\r\n        handleGAEventClickSize();\r\n        await document.getElementById('ARButton').click();\r\n        history.push(`/size/${category}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='ar_support_container' style={{display: onShowOverlay ? 'block' : 'none'}}>\r\n                <div className='ar_info_close_container' onClick={handleClickClose}>\r\n                    <span className='ar_info_close'/>\r\n                </div>\r\n                <div className='ar_info_reset_container' onClick={handleClickReset}>\r\n                    <img className='ar_info_reset' src='/assets/images/other/reset1.png' alt='reset'/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='ar_info_container' style={{display: onShowOverlay ? 'block' : 'none'}}>\r\n                <div className='ar_info'>\r\n                    <div className='ar_info_main'>\r\n                        <div className='ar_info_main_title'>\r\n                            {title}\r\n                        </div>\r\n                        <div className='ar_info_main_price'>\r\n                            {price} BYN\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='ar_info_additional'>\r\n                        <div>\r\n                            <span>Цвет: </span>{color}\r\n                        </div>\r\n                        <div>\r\n                            <span>Размеры, см: </span>{size}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className='ar_info_button_buy' onClick={handleClickBuy}>Посмотреть карточку товара</button>\r\n                </div>\r\n\r\n                <div className='ar_button_size_container'>\r\n                    <button className='ar_button_size' onClick={handleClickSize}>Подобрать по размерам</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AROverlay;","import React from \"react\";\r\nimport {Html, useProgress} from '@react-three/drei'\r\n\r\n\r\nconst ARLoader = () => {\r\n    const progress = useProgress();\r\n    return <Html center>{progress.progress} % loaded</Html>\r\n}\r\n\r\nexport default ARLoader;","class ARButton {\r\n\r\n    static createButton(renderer, sessionInit = {}, onReady) {\r\n        const button = document.createElement('button');\r\n\r\n        function showStartAR() {\r\n            if (sessionInit.domOverlay === undefined) {\r\n                let overlay = document.createElement('div');\r\n                overlay.style.display = 'none';\r\n                document.body.appendChild(overlay);\r\n\r\n                var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n                svg.setAttribute('width', 38);\r\n                svg.setAttribute('height', 38);\r\n                svg.style.position = 'absolute';\r\n                svg.style.right = '20px';\r\n                svg.style.top = '20px';\r\n                svg.addEventListener('click', function () {\r\n                    currentSession.end();\r\n                });\r\n                overlay.appendChild(svg);\r\n\r\n                let path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n                path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\r\n                path.setAttribute('stroke', '#fff');\r\n                path.setAttribute('stroke-width', 2);\r\n                svg.appendChild(path);\r\n\r\n                if (sessionInit.optionalFeatures === undefined) {\r\n                    sessionInit.optionalFeatures = [];\r\n                }\r\n\r\n                sessionInit.optionalFeatures.push('dom-overlay');\r\n                sessionInit.domOverlay = {root: overlay};\r\n            }\r\n\r\n            let currentSession = null;\r\n\r\n            async function onSessionStarted(session) {\r\n                session.addEventListener('end', onSessionEnded);\r\n                renderer.xr.setReferenceSpaceType('local');\r\n                await renderer.xr.setSession(session);\r\n                button.textContent = 'STOP AR';\r\n                sessionInit.domOverlay.root.style.display = '';\r\n                currentSession = session;\r\n\r\n            }\r\n\r\n            function onSessionEnded() {\r\n                currentSession.removeEventListener('end', onSessionEnded);\r\n                button.textContent = 'START AR';\r\n                sessionInit.domOverlay.root.style.display = 'none';\r\n                currentSession = null;\r\n            }\r\n\r\n            button.style.display = '';\r\n            button.style.cursor = 'pointer';\r\n            button.style.left = 'calc(50% - 50px)';\r\n            button.style.width = '100px';\r\n            button.textContent = 'START AR';\r\n            button.onmouseenter = function () {\r\n                button.style.opacity = '1.0';\r\n            };\r\n\r\n            button.onmouseleave = function () {\r\n                button.style.opacity = '0.5';\r\n            };\r\n\r\n            button.onclick = function () {\r\n                if (currentSession === null) {\r\n                    onReady(true);\r\n                    navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\r\n                } else {\r\n                    currentSession.end();\r\n                }\r\n            };\r\n        }\r\n\r\n        function disableButton() {\r\n            button.style.display = '';\r\n            button.style.cursor = 'auto';\r\n            button.style.left = 'calc(50% - 75px)';\r\n            button.style.width = '150px';\r\n            button.onmouseenter = null;\r\n            button.onmouseleave = null;\r\n            button.onclick = null;\r\n        }\r\n\r\n        function showARNotSupported() {\r\n            disableButton();\r\n            button.textContent = 'AR NOT SUPPORTED';\r\n        }\r\n\r\n        function stylizeElement(element) {\r\n            element.style.position = 'absolute';\r\n            element.style.bottom = '20px';\r\n            element.style.padding = '12px 6px';\r\n            element.style.border = '1px solid #fff';\r\n            element.style.borderRadius = '4px';\r\n            element.style.background = 'rgba(0,0,0,0.1)';\r\n            element.style.color = '#fff';\r\n            element.style.font = 'normal 13px sans-serif';\r\n            element.style.textAlign = 'center';\r\n            element.style.opacity = '0.5';\r\n            element.style.outline = 'none';\r\n            element.style.zIndex = '999';\r\n        }\r\n\r\n        if ('xr' in navigator) {\r\n\r\n            button.id = 'ARButton';\r\n            button.style.display = 'none';\r\n            stylizeElement(button);\r\n            navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\r\n                supported ?\r\n                    showStartAR() :\r\n                    showARNotSupported();\r\n                onReady(true);\r\n            })\r\n                .catch(showARNotSupported);\r\n            return button;\r\n        } else {\r\n            const message = document.createElement('a');\r\n            if (window.isSecureContext === false) {\r\n                message.href = document.location.href.replace(/^http:/, 'https:');\r\n                message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n            } else {\r\n                message.href = 'https://immersiveweb.dev/';\r\n                message.innerHTML = 'WEBXR NOT AVAILABLE';\r\n            }\r\n            message.style.left = 'calc(50% - 90px)';\r\n            message.style.width = '180px';\r\n            message.style.textDecoration = 'none';\r\n            stylizeElement(message);\r\n\r\n            return message;\r\n        }\r\n    }\r\n}\r\n\r\nexport {ARButton};","import React from 'react';\r\nimport './AROverlayGray.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\n\r\nconst AROverlayGray = ({\r\n                           product: {title, size},\r\n                           onHit, onShowOverlay, scale\r\n                       }) => {\r\n\r\n    const handleGAEventClickClose = () => GAevent('AR GRAY', 'click close', title);\r\n    const handleGAEventClickReset = () => GAevent('AR GRAY', 'click reset', title);\r\n    const handleGAEventClickSize = () => GAevent('AR GRAY', 'click size', title);\r\n\r\n    const handleClickClose = async () => {\r\n        handleGAEventClickClose();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        handleGAEventClickReset();\r\n        onHit(false);\r\n    }\r\n\r\n    const handleClickSize = async () => {\r\n        handleGAEventClickSize();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const scaleSizes = [\r\n        Math.round(size[0] * scale.x),\r\n        Math.round(size[1] * scale.y),\r\n        Math.round(size[2] * scale.z)\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className='ar_gray_support_container' style={{display: onShowOverlay ? 'block' : 'none'}}>\r\n                <div className='ar_gray_info_close_container' onClick={handleClickClose}>\r\n                    <span className='ar_gray_info_close'/>\r\n                </div>\r\n                <div className='ar_gray_info_reset_container' onClick={handleClickReset}>\r\n                    <img className='ar_gray_info_reset' src='/assets/images/other/reset1.png' alt='reset'/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='ar_gray_info_container' style={{display: onShowOverlay ? 'block' : 'none'}}>\r\n                <div className='ar_gray_info'>\r\n                    <div className='ar_gray_info_title'>\r\n                        {title}\r\n                    </div>\r\n                    <div className='ar_gray_info_size'>\r\n                        <span>Размеры, см: </span> {\r\n                        (scaleSizes[2]) ?\r\n                            `${scaleSizes[0]} X ${scaleSizes[1]} X ${scaleSizes[2]}` :\r\n                            `${scaleSizes[0]} X ${scaleSizes[1]}`\r\n                    }\r\n                    </div>\r\n                    <div className='ar_gray_info_test_model'>\r\n                        модель имеет иллюстративный характер\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='ar_gray_button_size_container'>\r\n                    <button className='ar_gray_button_size' onClick={handleClickSize}>Изменить размеры</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AROverlayGray;","import React, {useEffect, useState, Suspense, useRef} from 'react';\r\nimport './WebXR.css';\r\nimport {useLocation} from \"react-router\";\r\nimport {unmountComponentAtNode} from \"@react-three/fiber\";\r\nimport {ARCanvas, DefaultXRControllers} from \"@react-three/xr\";\r\n\r\nimport ARModel from \"./ARModel/ARModel\";\r\nimport ARHitTest from \"./ARHitTest/ARHitTest\";\r\nimport AROverlay from \"./AROverlay/AROverlay\";\r\n\r\nimport ARLoader from \"./ARLoader/ARLoader\";\r\nimport {ARButton} from \"./ARButton\";\r\nimport AROverlayGray from \"./AROverlay/AROverlayGray\";\r\nimport {GAevent} from \"../GoogleAnalytics/Events\";\r\n\r\nconst WebXR = ({product, onSetProduct, scale}) => {\r\n    const location = useLocation();\r\n    const canvas = useRef();\r\n    const time = useRef(Date.now());\r\n\r\n    const [isHit, setIsHit] = useState(false);\r\n    const [hitMatrix, setHitMatrix] = useState({});\r\n    const [mode, setMode] = useState('');\r\n\r\n    const [showOverlay, setShowOverlay] = useState(true);\r\n    const [buttonReady, setButtonReady] = useState(false);\r\n\r\n    const handleGAEventSessionDuration = (time) => {\r\n        GAevent('AR SESSION', 'duration session', `${time} seconds`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const path = location.pathname.split('/')[1];\r\n        setMode((path) === 'size' ? 'grayModel' : 'model');\r\n\r\n        return () => {\r\n            if (document.getElementById('ARButton')) {\r\n                document.body.removeChild(document.getElementById('ARButton'));\r\n            }\r\n            unmountComponentAtNode(document.querySelector('canvas'));\r\n        }\r\n    }, [product]);\r\n    console.log(buttonReady);\r\n    const handleIsHit = (hit) => setIsHit(hit);\r\n    const handleHitMatrix = (matrix) => setHitMatrix(matrix);\r\n    const handleSetShowOverlay = (state) => setShowOverlay(state);\r\n    const handleSetButtonReady = (state) => setButtonReady(state);\r\n\r\n    const handleStartSession = (gl) => {\r\n        const arConfig = {\r\n            requiredFeatures: ['hit-test'],\r\n            optionalFeatures: ['dom-overlay'],\r\n            domOverlay: {root: document.querySelector('.canvas_container')}\r\n        }\r\n\r\n        const btn = ARButton.createButton(gl, arConfig, handleSetButtonReady);\r\n        document.body.append(btn);\r\n\r\n        gl.xr.addEventListener('sessionend', () => {\r\n            const timeEnd = Date.now();\r\n            handleGAEventSessionDuration((timeEnd - time.current) / 1000);\r\n            onSetProduct(null, product.title);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (buttonReady) {\r\n            document.getElementById('ARButton').click();\r\n        }\r\n    }, [buttonReady])\r\n\r\n    return (\r\n        <div className='canvas_container' ref={canvas}>\r\n            <ARCanvas className='ARCanvas' mode=\"concurrent\" dpr onCreated={({gl}) => handleStartSession(gl)}>\r\n                <directionalLight position={[0, 1, 6]} intensity={1}/>\r\n                <directionalLight position={[0, 1, -6]} intensity={1}/>\r\n                <directionalLight position={[6, 1, 0]} intensity={1}/>\r\n                <directionalLight position={[-6, 2, 0]} intensity={1}/>\r\n                <directionalLight position={[0, -5, 0]} intensity={1}/>\r\n\r\n                <Suspense fallback={<ARLoader/>}>\r\n                    {!isHit && <ARHitTest onHit={handleIsHit} onHitMatrix={handleHitMatrix}/>}\r\n\r\n                    {isHit &&\r\n                    <ARModel product={product} matrix={hitMatrix} scale={scale} onShowOverlay={handleSetShowOverlay}/>}\r\n                </Suspense>\r\n\r\n                <DefaultXRControllers/>\r\n            </ARCanvas>\r\n            {isHit && (mode === 'model') ?\r\n                <AROverlay product={product} onHit={handleIsHit} onShowOverlay={showOverlay}/> :\r\n                isHit && (mode === 'grayModel') ?\r\n                    <AROverlayGray product={product} onHit={handleIsHit} onShowOverlay={showOverlay} scale={scale}/> :\r\n                    null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebXR;","import React, {useEffect, useState} from 'react';\r\nimport './Category.css';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport WebXR from \"../../WebXR/WebXR\";\r\n\r\nconst Category = ({data}) => {\r\n    const {category} = useParams();\r\n    const [os, setOS] = useState('');\r\n    const [selectProduct, setSelectProduct] = useState(null);\r\n\r\n    const handleGAEventClickStartAR = (title) => GAevent('CATEGORY', 'click startAR', title);\r\n    const handleGAEventClickSize = (title) => GAevent('CATEGORY', 'click size', title);\r\n\r\n    useEffect(() => {\r\n        const userAgent = window.navigator.userAgent;\r\n\r\n        if (/iPhone|iPad|iPod/i.test(userAgent)) {\r\n            setOS('apple')\r\n        } else {\r\n            setOS('android');\r\n        }\r\n    }, []);\r\n\r\n    const handleSetProduct = (product, title = '') => {\r\n        if (os === 'android') {\r\n            setSelectProduct(product);\r\n        }\r\n\r\n        handleGAEventClickStartAR(title);\r\n    }\r\n\r\n    const getProduct = (product) => {\r\n        const {id, title, image, color, size, price, usdz} = product;\r\n\r\n        if (os === 'apple') {\r\n            return (\r\n                <li key={id} className='category_item'>\r\n                    <a className='category_item_apple_link' id=\"ar-link\" href={usdz} rel='ar'>\r\n                        <div className='category_item_image_container'>\r\n                            <img className='category_item_image' src={image} alt={title}/>\r\n                            <img className='category_item_ar_image' src='/assets/images/other/ar-link.svg' alt='ar'/>\r\n                        </div>\r\n                        <div className='category_item_title'>{title}</div>\r\n                        <div className='category_additional_info_container'>\r\n                            <div className='category_item_color'><span>Цвет: </span>{color}</div>\r\n                            <div className='category_item_size'><span>Размеры, см: </span>{size}</div>\r\n                        </div>\r\n                        <div className='category_item_price'>{price} BYN</div>\r\n                    </a>\r\n                </li>\r\n            )\r\n        } else {\r\n            return (\r\n                <li key={id} className='category_item' onClick={() => handleSetProduct(product)}>\r\n                    <div className='category_item_image_container'>\r\n                        <img className='category_item_image' src={image} alt={title}/>\r\n                        <img className='category_item_ar_image' src='/assets/images/other/ar-link.svg' alt='ar'/>\r\n                    </div>\r\n                    <div className='category_item_title'>{title}</div>\r\n                    <div className='category_additional_info_container'>\r\n                        <div className='category_item_color'><span>Цвет: </span>{color}</div>\r\n                        <div className='category_item_size'><span>Размеры, см: </span>{size}</div>\r\n                    </div>\r\n                    <div className='category_item_price'>{price} BYN</div>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCategoryProducts = () => {\r\n        const {products} = data[category];\r\n\r\n        return products.map(product => {\r\n            return getProduct(product);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!selectProduct &&\r\n            <div className='category_container'>\r\n                <div className='category_header'>\r\n                    {data[category].title}\r\n                </div>\r\n\r\n                <ul className='category_list'>\r\n                    {getCategoryProducts()}\r\n                </ul>\r\n\r\n                {os === 'android' &&\r\n                <Link className='category_link_size_container' to={`/size/${category}`}\r\n                      onClick={() => handleGAEventClickSize(data[category].title)}>\r\n                    <button className='category_link_size' type='button'>\r\n                        Подобрать по размерам\r\n                    </button>\r\n                </Link>\r\n                }\r\n\r\n            </div>}\r\n\r\n            {selectProduct &&\r\n            <WebXR product={selectProduct} onSetProduct={handleSetProduct} scale={{x: 1, y: 1, z: 1}}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Category;","import React, {useRef, useState} from 'react';\r\nimport './Size.css';\r\nimport {useParams} from \"react-router\";\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport WebXR from \"../../WebXR/WebXR\";\r\n\r\nconst Size = ({data}) => {\r\n    const {category} = useParams();\r\n    const xInput = useRef();\r\n    const yInput = useRef();\r\n    const zInput = useRef();\r\n    const scale = useRef({});\r\n    const [selectProduct, setSelectProduct] = useState(null);\r\n\r\n    const handleGAEventClickAcceptButton = () => {\r\n        GAevent(\r\n            'SIZE',\r\n            'click accept button',\r\n            `\r\n            X - ${xInput.current.value ? xInput.current.value : 'default'} // \r\n            Y - ${yInput.current.value ? yInput.current.value : 'default'} //\r\n            Z - ${zInput.current.value ? zInput.current.value : 'default'}\r\n            `\r\n        );\r\n\r\n        setSelectProduct(data[category]);\r\n    }\r\n\r\n    const handleClickInput = (eo) => {\r\n        if (eo.target.value === '0') {\r\n            eo.target.value = '';\r\n        }\r\n    }\r\n\r\n    const handleBlurInput = (eo) => {\r\n        if (eo.target.value === '') {\r\n            eo.target.value = '0';\r\n        }\r\n    }\r\n\r\n    const getInputs = () => {\r\n        return data[category].sides.map((side, index) => {\r\n            const ref = index === 0 ? xInput : index === 1 ? yInput : zInput;\r\n            return (\r\n                <div key={index} className='size_input_item'>\r\n                    <label htmlFor={side[0]}>{side[1]}: </label>\r\n                    <input ref={ref} className='size_input' id={side[0]} type='number' defaultValue='0'\r\n                           onClick={handleClickInput} onBlur={handleBlurInput}\r\n                    />\r\n                    <span>см</span>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    const modelScale = () => {\r\n        const def = data[category].grayModel.size;\r\n\r\n        if (def[0] && def[1]) {\r\n            const x = Number(xInput.current.value);\r\n            const y = Number(yInput.current.value);\r\n            const baseX = def[0];\r\n            const baseY = def[1];\r\n\r\n            scale.current = {\r\n                x: (x === 0) ? 1 : x / baseX,\r\n                y: (y === 0) ? 1 : y / baseY\r\n            }\r\n            console.log(def[2])\r\n            if (def[2]) {\r\n                const z = Number(zInput.current.value);\r\n                const baseZ = def[2];\r\n                scale.current = {\r\n                    ...scale.current,\r\n                    z: (z === 0) ? 1 : z / baseZ\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSetProduct = (product) => {\r\n        setSelectProduct(product);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!selectProduct &&\r\n            <div className='size_container'>\r\n                <div className='size_header'>Введите размеры объекта</div>\r\n\r\n                <div className='size_image_container'>\r\n                    <img className='size_image' src={data[category].figure} alt='size'/>\r\n                </div>\r\n\r\n                <div className='size_input_list'>\r\n                    {getInputs()}\r\n                </div>\r\n\r\n                <div className='size_accept_button_container' onClick={modelScale}>\r\n\r\n                    <button\r\n                        className='size_accept_button'\r\n                        type='button'\r\n                        onClick={handleGAEventClickAcceptButton}\r\n                    >\r\n                        Применить\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n\r\n            {selectProduct &&\r\n            <WebXR product={data[category].grayModel} onSetProduct={handleSetProduct} scale={scale.current}/>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Size;","import React, {useEffect} from 'react';\r\nimport './Video.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\n\r\nconst Video = () => {\r\n\r\n\r\n    const handleGAEventSendVideoDuration = (time) => {\r\n        GAevent('VIDEO', 'duration video', `${time} seconds`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const time = Date.now();\r\n\r\n        return () => {\r\n            const timeEnd = Date.now();\r\n            handleGAEventSendVideoDuration((timeEnd - time) / 1000);\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='video_container'>\r\n            <video autoPlay='autoPlay'\r\n                   preload='auto'\r\n                   controls='controls'\r\n                   poster='./assets/video/example.mp4'\r\n            >\r\n                <source\r\n                    src='./assets/video/example.mp4'\r\n                    type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n                />\r\n            </video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video;","import React, {useEffect} from 'react';\nimport './App.css';\nimport data from './data.json';\n\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\n\nimport Catalog from \"./components/Catalog/Catalog\";\nimport Category from \"./components/Catalog/Category/Category\";\nimport WebXR from \"./components/WebXR/WebXR\";\nimport Size from \"./components/Catalog/Size/Size\";\nimport {initGA} from \"./index\";\nimport Video from \"./components/Catalog/Video/Video\";\n\nfunction App() {\n    useEffect(() => {\n        initGA();\n    }, []);\n\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/catalog'>\n                    <Catalog data={data}/>\n                </Route>\n                <Route exact path='/catalog/:category'>\n                    <Category data={data}/>\n                </Route>\n                {/*<Route exact path='/ar/:category/:productId'>\n                    <WebXR data={data}/>\n                </Route>*/}\n                <Route exact path='/size/:category'>\n                    <Size data={data}/>\n                </Route>\n                <Route exact path='/video'>\n                    <Video/>\n                </Route>\n                <Redirect from='/' to='/catalog'/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactGA from 'react-ga';\nimport firebase from 'firebase';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCdB3XBs4ALGqLYLUZXXQ014feBNCINuig\",\n    authDomain: \"checkitsmart.firebaseapp.com\",\n    projectId: \"checkitsmart\",\n    storageBucket: \"checkitsmart.appspot.com\",\n    messagingSenderId: \"448014911448\",\n    appId: \"1:448014911448:web:52129388d603803ca914ad\",\n    measurementId: \"G-74T6YQ66N7\"\n});\n\nfirebase.analytics();\n\nexport const initGA = () => {\n    ReactGA.initialize('UA-198795629-1');\n}\n\nexport const GApageView = (page) => {\n    ReactGA.pageview(page);\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}