{"version":3,"sources":["components/GoogleAnalytics/Events.js","components/Catalog/Catalog.js","components/WebXR/ARModel/ARModel.js","components/WebXR/ARHitTest/ARHitTest.js","components/WebXR/AROverlay/AROverlay.js","components/WebXR/ARLoader/ARLoader.js","components/WebXR/ARButton.js","components/WebXR/AROverlay/AROverlayGray.js","components/WebXR/WebXR.js","components/Catalog/Category/Product/Product.js","components/Catalog/Category/Category.js","components/Catalog/Size/Size.js","components/Catalog/Video/Video.js","App.js","index.js"],"names":["GAevent","categoryName","eventName","label","value","ReactGA","event","category","action","nonInteraction","Catalog","data","handleGAEventClickVideo","className","Object","keys","map","id","slug","title","image","style","backgroundImage","to","onClick","handleGAEventClickCategory","handleGAEventClickSize","src","alt","ARModel","React","memo","product","matrix","scale","mode","useThree","camera","domElement","gl","gltf","useLoader","GLTFLoader","arGLTF","overlay","useRef","support","document","querySelector","info","controls","axisYPosition","useEffect","scene","set","x","y","z","position","setFromMatrixPosition","current","DragControls","transformGroup","addEventListener","display","object","ARHitTest","onSetMatrix","mesh","material","useHitTest","hit","transparent","opacity","decompose","rotation","ref","onPointerDown","args","Math","PI","color","AROverlay","price","size","mfrLink","onHit","useParams","history","useHistory","handleClickClose","a","getElementById","click","handleClickBuy","window","open","handleClickSize","push","ARLoader","progress","useProgress","Html","center","ARButton","renderer","sessionInit","onReady","button","createElement","showStartAR","undefined","domOverlay","body","appendChild","svg","createElementNS","setAttribute","right","top","currentSession","end","path","optionalFeatures","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","isSessionSupported","supported","catch","message","isSecureContext","href","location","replace","innerHTML","textDecoration","AROverlayGray","scaleSizes","round","WebXR","onSetProduct","canvas","time","Date","now","useState","isHit","setIsHit","buttonReady","setButtonReady","sessionReady","setSessionReady","setMatrix","handleIsHit","handleSetButtonReady","state","handleStartSession","arConfig","requiredFeatures","append","createButton","console","log","handleGAEventSessionDuration","removeChild","unmountComponentAtNode","onCreated","intensity","fallback","Product","usdz","os","onSelectProduct","rel","Category","test","userAgent","selectProduct","setSelectProduct","handleGAEventClickStartAR","handleSetProduct","products","type","Size","height","depth","handleClickInput","eo","target","handleBlurInput","figure","sides","side","index","htmlFor","defaultValue","onBlur","grayModel","baseWidth","baseHeight","baseDepth","Number","Video","handleGAEventSendVideoDuration","autoPlay","preload","poster","App","initGA","exact","from","initialize","GApageView","page","pageview","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e6048832.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\r\n\r\nexport const GAevent = (categoryName, eventName, label = ' ', value = 10) => {\r\n    ReactGA.event({\r\n        category: categoryName,\r\n        action: eventName,\r\n        label: label,\r\n        value: value,\r\n        nonInteraction: false\r\n    });\r\n}\r\n\r\nexport const GAtiming = (categoryName, variableName, valueNum) => {\r\n    ReactGA.timing({\r\n        category: categoryName,\r\n        variable: variableName,\r\n        value: valueNum\r\n    });\r\n};\r\n\r\nexport const GAexception = (detail) => {\r\n    ReactGA.exception({ description: detail });\r\n};","import React from 'react';\r\nimport './Catalog.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {GAevent} from \"../GoogleAnalytics/Events\";\r\n\r\nconst Catalog = ({data}) => {\r\n    const handleGAEventClickSize = (title) => GAevent('SIZE', 'click size', title);\r\n    const handleGAEventClickCategory = (title) => GAevent('CATEGORY', `click category`, title);\r\n    const handleGAEventClickVideo = () => GAevent('VIDEO', 'click video', 'video');\r\n\r\n    const getCatalogList = () => {\r\n        const categories = Object.keys(data);\r\n\r\n        return categories.map(category => {\r\n            const {id, slug, title, image} = data[category];\r\n\r\n            return (\r\n                <li key={id} className='catalog_item'\r\n                    style={{backgroundImage: (`url(\"${image}\")`)}}>\r\n                    <Link\r\n                        className='item_link_category'\r\n                        to={`/catalog/${slug}`}\r\n                        onClick={() => handleGAEventClickCategory(title)}\r\n                    >\r\n                        <span className='item_link_category_title'>{title}</span>\r\n                    </Link>\r\n                    <Link\r\n                        className='item_link_category_size'\r\n                        to={`/size/${slug}`}\r\n                        onClick={() => handleGAEventClickSize(title)}\r\n                    >\r\n                        <img\r\n                            className='item_link_category_size_image'\r\n                            src='/assets/images/other/ruler.png'\r\n                            alt={title + ' size'}\r\n                        />\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='catalog_container'>\r\n\r\n            <div className='catalog_header'>\r\n                Каталог\r\n            </div>\r\n\r\n            <ul className='catalog_list'>\r\n                {getCatalogList()}\r\n\r\n                <li className='catalog_item_video' onClick={() => handleGAEventClickVideo}>\r\n                    <Link className='item_link_video' to='/video'>\r\n                        Как это работает?\r\n                    </Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Catalog;","import React, {useEffect, useRef} from 'react';\r\nimport {useLoader, useThree} from \"@react-three/fiber\";\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport {DragControls} from \"three/examples/jsm/controls/DragControls\";\r\n\r\nconst ARModel = React.memo(({product, matrix, scale, mode}) => {\r\n\r\n    const {camera, gl: {domElement}} = useThree();\r\n    const gltf = useLoader(GLTFLoader, product.arGLTF);\r\n    const overlay = useRef({\r\n        support: document.querySelector((mode === 'model') ? '.ar_support_container' : '.ar_gray_support_container'),\r\n        info: document.querySelector((mode === 'model') ? '.ar_info_container' : '.ar_gray_info_container')\r\n    });\r\n    \r\n    const controls = useRef({});\r\n    const axisYPosition = useRef(0);\r\n\r\n    useEffect(() => {\r\n        if (scale && matrix) {\r\n            gltf.scene.scale.set(scale.x, scale.y, scale.z);\r\n            gltf.scene.position.setFromMatrixPosition(matrix);\r\n            axisYPosition.current = gltf.scene.position.y;\r\n        }\r\n        controls.current = new DragControls([gltf.scene], camera, domElement);\r\n        controls.current.transformGroup = true;\r\n\r\n        const handleDragMove = () => (gltf.scene.position.y = axisYPosition.current);\r\n        const handleDragStart = () => {\r\n            overlay.current.support.style.display = 'none';\r\n            overlay.current.info.style.display = 'none';\r\n        };\r\n        const handleDragEnd = () => {\r\n            overlay.current.support.style.display = 'block';\r\n            overlay.current.info.style.display = 'block';\r\n        };\r\n\r\n        controls.current.addEventListener('drag', handleDragMove);\r\n        controls.current.addEventListener('dragstart', handleDragStart);\r\n        controls.current.addEventListener('dragend', handleDragEnd);\r\n    }, [camera, domElement, gltf.scene, matrix, scale]);\r\n\r\n    return (\r\n        <primitive object={gltf.scene}/>\r\n    )\r\n});\r\n\r\nexport default ARModel;","import React, {useRef} from 'react';\r\nimport {useHitTest} from \"@react-three/xr\";\r\nimport {Circle, Ring} from \"@react-three/drei\";\r\n\r\nconst ARHitTest = React.memo(({onSetMatrix}) => {\r\n    const mesh = useRef();\r\n    const material = useRef();\r\n\r\n    useHitTest(hit => {\r\n        if (hit && material.current && material.current.transparent) {\r\n            material.current.opacity = 0.9;\r\n        }\r\n        if (mesh.current && hit) {\r\n            hit.decompose(mesh.current.position, mesh.current.rotation, mesh.current.scale);\r\n        }\r\n    });\r\n\r\n    const handlePointerDown = () => onSetMatrix(mesh.current.matrix);\r\n\r\n    return (\r\n        <mesh ref={mesh} onPointerDown={handlePointerDown}>\r\n            <Ring args={[0.09, 0.12, 32]} rotation={[-Math.PI / 2, 0, 0]}>\r\n                <meshStandardMaterial ref={material} color='#FFFFFF' transparent='true' opacity='0'/>\r\n            </Ring>\r\n            <Circle args={[0.15, 8]}>\r\n                <meshStandardMaterial transparent='true' opacity='0'/>\r\n            </Circle>\r\n        </mesh>\r\n\r\n    );\r\n});\r\n\r\nexport default ARHitTest;","import React from 'react';\r\nimport './AROverlay.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport {useHistory, useParams} from \"react-router\";\r\n\r\nconst AROverlay = ({product: {title, price, color, size, mfrLink}, onHit}) => {\r\n    const {category} = useParams();\r\n    const history = useHistory();\r\n\r\n    const handleGAEventClickClose = () => GAevent('AR MODEL', 'click close', title);\r\n    const handleGAEventClickReset = () => GAevent('AR MODEL', 'click reset', title);\r\n    const handleGAEventClickRedirect = () => GAevent('AR MODEL', 'click redirect to store', title);\r\n    const handleGAEventClickSize = () => GAevent('AR MODEL', 'click size', title);\r\n\r\n    const handleClickClose = async () => {\r\n        handleGAEventClickClose();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        handleGAEventClickReset();\r\n        onHit(false);\r\n    }\r\n\r\n    const handleClickBuy = async () => {\r\n        handleGAEventClickRedirect();\r\n        await document.getElementById('ARButton').click();\r\n        window.open(mfrLink);\r\n    }\r\n\r\n    const handleClickSize = async () => {\r\n        handleGAEventClickSize();\r\n        await document.getElementById('ARButton').click();\r\n        history.push(`/size/${category}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='ar_support_container'>\r\n                <div className='ar_info_close_container' onClick={handleClickClose}>\r\n                    <span className='ar_info_close'/>\r\n                </div>\r\n                <div className='ar_info_reset_container' onClick={handleClickReset}>\r\n                    <img className='ar_info_reset' src='/assets/images/other/reset.svg' alt='reset'/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='ar_info_container'>\r\n                <div className='ar_info'>\r\n                    <div className='ar_info_main'>\r\n                        <div className='ar_info_main_title'>\r\n                            {title}\r\n                        </div>\r\n                        <div className='ar_info_main_price'>\r\n                            {price} BYN\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='ar_info_additional'>\r\n                        <div>\r\n                            <span>Цвет: </span>{color}\r\n                        </div>\r\n                        <div>\r\n                            <span>Размеры, см: </span>{size}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className='ar_info_button_buy' onClick={handleClickBuy}>Посмотреть карточку товара</button>\r\n                </div>\r\n\r\n                <div className='ar_button_size_container'>\r\n                    <button className='ar_button_size' onClick={handleClickSize}>Подобрать по размерам</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AROverlay;","import React from \"react\";\r\nimport {Html, useProgress} from '@react-three/drei'\r\n\r\n\r\nconst ARLoader = () => {\r\n    const progress = useProgress();\r\n    return <Html center>{progress.progress} % loaded</Html>\r\n}\r\n\r\nexport default ARLoader;","class ARButton {\r\n\r\n    static createButton(renderer, sessionInit = {}, onReady) {\r\n        const button = document.createElement('button');\r\n\r\n        function showStartAR() {\r\n            if (sessionInit.domOverlay === undefined) {\r\n                let overlay = document.createElement('div');\r\n                overlay.style.display = 'none';\r\n                document.body.appendChild(overlay);\r\n\r\n                var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n                svg.setAttribute('width', 38);\r\n                svg.setAttribute('height', 38);\r\n                svg.style.position = 'absolute';\r\n                svg.style.right = '20px';\r\n                svg.style.top = '20px';\r\n                svg.addEventListener('click', function () {\r\n                    currentSession.end();\r\n                });\r\n                overlay.appendChild(svg);\r\n\r\n                let path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n                path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\r\n                path.setAttribute('stroke', '#fff');\r\n                path.setAttribute('stroke-width', 2);\r\n                svg.appendChild(path);\r\n\r\n                if (sessionInit.optionalFeatures === undefined) {\r\n                    sessionInit.optionalFeatures = [];\r\n                }\r\n\r\n                sessionInit.optionalFeatures.push('dom-overlay');\r\n                sessionInit.domOverlay = {root: overlay};\r\n            }\r\n\r\n            let currentSession = null;\r\n\r\n            async function onSessionStarted(session) {\r\n                session.addEventListener('end', onSessionEnded);\r\n                renderer.xr.setReferenceSpaceType('local');\r\n                await renderer.xr.setSession(session);\r\n                button.textContent = 'STOP AR';\r\n                sessionInit.domOverlay.root.style.display = '';\r\n                currentSession = session;\r\n            }\r\n\r\n            function onSessionEnded() {\r\n                currentSession.removeEventListener('end', onSessionEnded);\r\n                button.textContent = 'START AR';\r\n                sessionInit.domOverlay.root.style.display = 'none';\r\n                currentSession = null;\r\n            }\r\n\r\n            button.style.display = '';\r\n            button.style.cursor = 'pointer';\r\n            button.style.left = 'calc(50% - 50px)';\r\n            button.style.width = '100px';\r\n            button.textContent = 'START AR';\r\n            button.onmouseenter = function () {\r\n                button.style.opacity = '1.0';\r\n            };\r\n\r\n            button.onmouseleave = function () {\r\n                button.style.opacity = '0.5';\r\n            };\r\n\r\n            button.onclick = function () {\r\n                if (currentSession === null) {\r\n                    navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\r\n                } else {\r\n                    currentSession.end();\r\n                }\r\n            };\r\n        }\r\n\r\n        function disableButton() {\r\n            button.style.display = '';\r\n            button.style.cursor = 'auto';\r\n            button.style.left = 'calc(50% - 75px)';\r\n            button.style.width = '150px';\r\n            button.onmouseenter = null;\r\n            button.onmouseleave = null;\r\n            button.onclick = null;\r\n        }\r\n\r\n        function showARNotSupported() {\r\n            disableButton();\r\n            button.textContent = 'AR NOT SUPPORTED';\r\n        }\r\n\r\n        function stylizeElement(element) {\r\n            element.style.position = 'absolute';\r\n            element.style.bottom = '20px';\r\n            element.style.padding = '12px 6px';\r\n            element.style.border = '1px solid #fff';\r\n            element.style.borderRadius = '4px';\r\n            element.style.background = 'rgba(0,0,0,0.1)';\r\n            element.style.color = '#fff';\r\n            element.style.font = 'normal 13px sans-serif';\r\n            element.style.textAlign = 'center';\r\n            element.style.opacity = '0.5';\r\n            element.style.outline = 'none';\r\n            element.style.zIndex = '999';\r\n        }\r\n\r\n        if ('xr' in navigator) {\r\n\r\n            button.id = 'ARButton';\r\n            button.style.display = 'none';\r\n            stylizeElement(button);\r\n            navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\r\n                supported ?\r\n                    showStartAR() :\r\n                    showARNotSupported();\r\n                onReady(true);\r\n            })\r\n                .catch(showARNotSupported);\r\n            return button;\r\n        } else {\r\n            const message = document.createElement('a');\r\n            if (window.isSecureContext === false) {\r\n                message.href = document.location.href.replace(/^http:/, 'https:');\r\n                message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n            } else {\r\n                message.href = 'https://immersiveweb.dev/';\r\n                message.innerHTML = 'WEBXR NOT AVAILABLE';\r\n            }\r\n            message.style.left = 'calc(50% - 90px)';\r\n            message.style.width = '180px';\r\n            message.style.textDecoration = 'none';\r\n            stylizeElement(message);\r\n\r\n            return message;\r\n        }\r\n    }\r\n}\r\n\r\nexport {ARButton};","import React from 'react';\r\nimport './AROverlayGray.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\n\r\nconst AROverlayGray = ({product: {title, size}, onHit, scale}) => {\r\n    const handleGAEventClickClose = () => GAevent('AR GRAY', 'click close', title);\r\n    const handleGAEventClickReset = () => GAevent('AR GRAY', 'click reset', title);\r\n    const handleGAEventClickSize = () => GAevent('AR GRAY', 'click size', title);\r\n\r\n    const handleClickClose = async () => {\r\n        handleGAEventClickClose();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        handleGAEventClickReset();\r\n        onHit(false);\r\n    }\r\n\r\n    const handleClickSize = async () => {\r\n        handleGAEventClickSize();\r\n        await document.getElementById('ARButton').click();\r\n    }\r\n\r\n    const scaleSizes = [\r\n        Math.round(size[0] * scale.x),\r\n        Math.round(size[1] * scale.y),\r\n        Math.round(size[2] * scale.z)\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className='ar_gray_support_container'>\r\n                <div className='ar_gray_info_close_container' onClick={handleClickClose}>\r\n                    <span className='ar_gray_info_close'/>\r\n                </div>\r\n                <div className='ar_gray_info_reset_container' onClick={handleClickReset}>\r\n                    <img className='ar_gray_info_reset' src='/assets/images/other/reset.svg' alt='reset'/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='ar_gray_info_container'>\r\n                <div className='ar_gray_info'>\r\n                    <div className='ar_gray_info_title'>\r\n                        {title}\r\n                    </div>\r\n                    <div className='ar_gray_info_size'>\r\n                        <span>Размеры, см: </span> {\r\n                        (scaleSizes[2]) ?\r\n                            `Ш:${scaleSizes[0]} X В:${scaleSizes[1]} X Г:${scaleSizes[2]}` :\r\n                            `Ш:${scaleSizes[0]} X Д:${scaleSizes[1]}`\r\n                    }\r\n                    </div>\r\n                    <div className='ar_gray_info_test_model'>\r\n                        модель имеет иллюстративный характер\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='ar_gray_button_size_container'>\r\n                    <button className='ar_gray_button_size' onClick={handleClickSize}>Изменить размеры</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AROverlayGray;","import React, {useEffect, useState, Suspense, useRef} from 'react';\r\nimport './WebXR.css';\r\nimport {unmountComponentAtNode} from \"@react-three/fiber\";\r\nimport {ARCanvas, DefaultXRControllers} from \"@react-three/xr\";\r\n\r\nimport ARModel from \"./ARModel/ARModel\";\r\nimport ARHitTest from \"./ARHitTest/ARHitTest\";\r\nimport AROverlay from \"./AROverlay/AROverlay\";\r\n\r\nimport ARLoader from \"./ARLoader/ARLoader\";\r\nimport {ARButton} from \"./ARButton\";\r\nimport AROverlayGray from \"./AROverlay/AROverlayGray\";\r\nimport {GAevent} from \"../GoogleAnalytics/Events\";\r\n\r\nconst WebXR = React.memo(({product, onSetProduct, scale, mode}) => {\r\n    const canvas = useRef();\r\n    const time = useRef(Date.now());\r\n\r\n    const [isHit, setIsHit] = useState(false);\r\n    const [buttonReady, setButtonReady] = useState(false);\r\n    const [sessionReady, setSessionReady] = useState(false);\r\n    const [matrix, setMatrix] = useState(null);\r\n\r\n    const handleGAEventSessionDuration = (time) => {\r\n        GAevent('AR SESSION', 'duration session', `${time} seconds`);\r\n    }\r\n\r\n    const handleIsHit = (hit) => setIsHit(hit);\r\n    const handleSetMatrix = (matrix) => {\r\n        setMatrix(matrix);\r\n        setIsHit(true);\r\n    }\r\n    const handleSetButtonReady = (state) => setButtonReady(state);\r\n\r\n    const handleStartSession = (gl) => {\r\n        const arConfig = {\r\n            requiredFeatures: ['hit-test'],\r\n            optionalFeatures: ['dom-overlay'],\r\n            domOverlay: {root: document.querySelector('.canvas_container')}\r\n        }\r\n\r\n        document.body.append(ARButton.createButton(gl, arConfig, handleSetButtonReady));\r\n\r\n        gl.xr.addEventListener('sessionend', () => {\r\n            console.log('session end')\r\n            const timeEnd = Date.now();\r\n            handleGAEventSessionDuration((timeEnd - time.current) / 1000);\r\n            onSetProduct(null, product.title);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (document.getElementById('ARButton')) {\r\n                document.body.removeChild(document.getElementById('ARButton'));\r\n            }\r\n            unmountComponentAtNode(document.querySelector('canvas'));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buttonReady) {\r\n            document.getElementById('ARButton').click();\r\n            setSessionReady(true);\r\n        }\r\n    }, [buttonReady]);\r\n\r\n    return (\r\n        <div className='canvas_container' ref={canvas}>\r\n            <ARCanvas className='ARCanvas' onCreated={({gl}) => handleStartSession(gl)}>\r\n                <directionalLight position={[0, 1, 6]} intensity={1}/>\r\n                <directionalLight position={[0, 1, -6]} intensity={1}/>\r\n                <directionalLight position={[6, 1, 0]} intensity={1}/>\r\n                <directionalLight position={[-6, 2, 0]} intensity={1}/>\r\n                <directionalLight position={[0, -5, 0]} intensity={1}/>\r\n                <Suspense fallback={<ARLoader/>}>\r\n                    {(!isHit && sessionReady) &&\r\n                    <ARHitTest onSetMatrix={handleSetMatrix}/>}\r\n\r\n                    {isHit &&\r\n                    <ARModel product={product} matrix={matrix} scale={scale} onHit={handleIsHit} mode={mode}/>}\r\n                </Suspense>\r\n\r\n                <DefaultXRControllers/>\r\n            </ARCanvas>\r\n\r\n            {isHit && (mode === 'model') &&\r\n            <AROverlay product={product} onHit={handleIsHit}/>}\r\n\r\n            {isHit && (mode === 'grayModel') &&\r\n            <AROverlayGray product={product} onHit={handleIsHit} scale={scale}/>}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default WebXR;","import React from \"react\";\r\nimport './Product.css';\r\n\r\nconst Product = React.memo(({product: {title, image, color, size, price, usdz}, os, onSelectProduct, product}) => {\r\n\r\n    return (\r\n        <>\r\n            {!os &&\r\n            <li className='category_item' onClick={() => onSelectProduct(product)}>\r\n                <div className='category_item_image_container'>\r\n                    <img className='category_item_image' src={image} alt={title}/>\r\n                    <img className='category_item_ar_image' src='/assets/images/other/ar-link.svg' alt='ar'/>\r\n                </div>\r\n                <div className='category_item_title'>{title}</div>\r\n                <div className='category_additional_info_container'>\r\n                    <div className='category_item_color'><span>Цвет: </span>{color}</div>\r\n                    <div className='category_item_size'><span>Размеры, см: </span>{size}</div>\r\n                </div>\r\n                <div className='category_item_price'>{price} BYN</div>\r\n            </li>}\r\n\r\n            {os &&\r\n            <li className='category_item'>\r\n                <a className='category_item_apple_link' id=\"ar-link\" href={usdz} rel='ar'>\r\n                    <div className='category_item_image_container'>\r\n                        <img className='category_item_image' src={image} alt={title}/>\r\n                        <img className='category_item_ar_image' src='/assets/images/other/ar-link.svg'\r\n                             alt='ar'/>\r\n                    </div>\r\n                    <div className='category_item_title'>{title}</div>\r\n                    <div className='category_additional_info_container'>\r\n                        <div className='category_item_color'><span>Цвет: </span>{color}</div>\r\n                        <div className='category_item_size'><span>Размеры, см: </span>{size}</div>\r\n                    </div>\r\n                    <div className='category_item_price'>{price} BYN</div>\r\n                </a>\r\n            </li>}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Product;","import React, {useRef, useState} from 'react';\r\nimport './Category.css';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport WebXR from \"../../WebXR/WebXR\";\r\nimport Product from \"./Product/Product\";\r\n\r\nconst Category = React.memo(({data}) => {\r\n    const {category} = useParams();\r\n\r\n    const os = useRef(/iPhone|iPad|iPod/i.test(window.navigator.userAgent));\r\n    const [selectProduct, setSelectProduct] = useState(null);\r\n\r\n    const handleGAEventClickStartAR = (title) => GAevent('CATEGORY', 'click startAR', title);\r\n    const handleGAEventClickSize = (title) => GAevent('CATEGORY', 'click size', title);\r\n\r\n    const handleSetProduct = (product, title = '') => {\r\n        if (!os.current) {\r\n            setSelectProduct(product);\r\n        }\r\n\r\n        handleGAEventClickStartAR(title);\r\n    }\r\n\r\n    const getCategoryProducts = () => {\r\n        const {products} = data[category];\r\n        return products.map(product => (\r\n            <Product key={product.id} product={product} os={os.current} onSelectProduct={handleSetProduct}/>)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!selectProduct &&\r\n            <div className='category_container'>\r\n\r\n                <div className='category_header'>\r\n                    {data[category].title}\r\n                </div>\r\n\r\n                <ul className='category_list'>\r\n                    {getCategoryProducts()}\r\n                </ul>\r\n\r\n                {os &&\r\n                <Link className='category_link_size_container' to={`/size/${category}`}\r\n                      onClick={() => handleGAEventClickSize(data[category].title)}>\r\n                    <button className='category_link_size' type='button'>\r\n                        Подобрать по размерам\r\n                    </button>\r\n                </Link>\r\n                }\r\n\r\n            </div>\r\n            }\r\n\r\n            {selectProduct &&\r\n            <WebXR\r\n                product={selectProduct}\r\n                onSetProduct={handleSetProduct}\r\n                scale={{x: 1, y: 1, z: 1}}\r\n                mode={'model'}\r\n            />\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Category;","import React, {useRef, useState} from 'react';\r\nimport './Size.css';\r\nimport {useParams} from \"react-router\";\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\nimport WebXR from \"../../WebXR/WebXR\";\r\n\r\nconst Size = React.memo(({data}) => {\r\n    const {category} = useParams();\r\n    const width = useRef();\r\n    const height = useRef();\r\n    const depth = useRef();\r\n    const scale = useRef({});\r\n    const [selectProduct, setSelectProduct] = useState(null);\r\n\r\n    const handleGAEventClickAcceptButton = () => {\r\n        GAevent('SIZE', 'click accept button', scale);\r\n        setSelectProduct(data[category]);\r\n    }\r\n\r\n    const handleClickInput = (eo) => {\r\n        if (eo.target.value === '0') {\r\n            eo.target.value = '';\r\n        }\r\n    }\r\n\r\n    const handleBlurInput = (eo) => {\r\n        if (eo.target.value === '') {\r\n            eo.target.value = '0';\r\n        }\r\n    }\r\n\r\n    const handleSetProduct = (product) => setSelectProduct(product);\r\n\r\n    const getInputs = () => {\r\n        return data[category].sides.map((side, index) => {\r\n            let ref;\r\n\r\n            if (index === 0) {\r\n                ref = width;\r\n            }\r\n\r\n            if (index === 1) {\r\n                ref = height;\r\n            }\r\n\r\n            if (index === 2) {\r\n                ref = depth;\r\n            }\r\n            return (\r\n                <div key={index} className='size_input_item'>\r\n                    <label htmlFor={side[0]}>{side[1]}: </label>\r\n                    <input ref={ref} className='size_input' id={side[0]} type='number' defaultValue='0'\r\n                           onClick={handleClickInput} onBlur={handleBlurInput}\r\n                    />\r\n                    <span>см</span>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    const modelScale = () => {\r\n        const {grayModel} = data[category];\r\n        const [baseWidth, baseHeight, baseDepth] = grayModel.size;\r\n\r\n        if (baseWidth && baseHeight && baseDepth) {\r\n            scale.current = {\r\n                x: (Number(width.current.value) === 0) ? 1 : Number(width.current.value) / baseWidth,\r\n                y: (Number(height.current.value) === 0) ? 1 : Number(height.current.value) / baseHeight,\r\n                z: (Number(depth.current.value) === 0) ? 1 : Number(depth.current.value) / baseDepth\r\n            }\r\n        }\r\n\r\n        if (baseWidth && baseHeight && !baseDepth) {\r\n            scale.current = {\r\n                x: (Number(width.current.value) === 0) ? 1 : Number(width.current.value) / baseWidth,\r\n                y: (Number(height.current.value) === 0) ? 1 : Number(height.current.value) / baseHeight,\r\n                z: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!selectProduct &&\r\n            <div className='size_container'>\r\n\r\n                <div className='size_header'>\r\n                    Введите размеры объекта\r\n                </div>\r\n\r\n                <div className='size_image_container'>\r\n                    <img className='size_image' src={data[category].figure} alt='size'/>\r\n                </div>\r\n\r\n                <div className='size_input_list'>\r\n                    {getInputs()}\r\n                </div>\r\n\r\n                <div className='size_accept_button_container' onClick={modelScale}>\r\n                    <button className='size_accept_button' type='button' onClick={handleGAEventClickAcceptButton}>\r\n                        Применить\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            }\r\n\r\n            {selectProduct &&\r\n            <WebXR\r\n                product={data[category].grayModel}\r\n                onSetProduct={handleSetProduct}\r\n                scale={scale.current}\r\n                mode={'grayModel'}\r\n            />\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Size;","import React, {useEffect} from 'react';\r\nimport './Video.css';\r\nimport {GAevent} from \"../../GoogleAnalytics/Events\";\r\n\r\nconst Video = () => {\r\n\r\n    const handleGAEventSendVideoDuration = (time) => {\r\n        GAevent('VIDEO', 'duration video', `${time} seconds`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const time = Date.now();\r\n\r\n        return () => {\r\n            const timeEnd = Date.now();\r\n            handleGAEventSendVideoDuration((timeEnd - time) / 1000);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className='video_container'>\r\n            <video autoPlay='autoPlay'\r\n                   preload='auto'\r\n                   controls='controls'\r\n                   poster='./assets/video/example.mp4'\r\n            >\r\n                <source\r\n                    src='./assets/video/example.mp4'\r\n                    type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n                />\r\n            </video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video;","import React, {useEffect} from 'react';\nimport './App.css';\nimport data from './data.json';\n\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\n/*import {database} from \"./firebase/firebase\";*/\n\nimport Catalog from \"./components/Catalog/Catalog\";\nimport Category from \"./components/Catalog/Category/Category\";\nimport Size from \"./components/Catalog/Size/Size\";\nimport {initGA} from \"./index\";\nimport Video from \"./components/Catalog/Video/Video\";\n\nfunction App() {\n    useEffect(() => {\n        initGA();\n    }, []);\n\n/*    const fetch = async () => {\n        const response = database.collection('catalog');\n        const data = await response.get();\n        data.docs.forEach(item => {\n            console.log(item.data())\n        })\n    }*/\n\n    return (\n            <Router>\n                <Switch>\n\n                    <Route exact path='/catalog'>\n                        <Catalog data={data}/>\n                    </Route>\n\n                    <Route exact path='/video'>\n                        <Video/>\n                    </Route>\n\n                    <Route exact path='/catalog/:category'>\n                        <Category data={data}/>\n                    </Route>\n\n                    <Route exact path='/size/:category'>\n                        <Size data={data}/>\n                    </Route>\n\n                    <Redirect from='/' to='/catalog'/>\n\n                </Switch>\n            </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ReactGA from 'react-ga';\n\nexport const initGA = () => {\n    ReactGA.initialize('UA-198795629-1');\n}\n\nexport const GApageView = (page) => {\n    ReactGA.pageview(page);\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}